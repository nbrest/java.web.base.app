<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:cache="http://www.springframework.org/schema/cache"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/cache
http://www.springframework.org/schema/cache/spring-cache.xsd">

  <!-- Root Application Context for the entire web application -->
  <context:component-scan base-package="com.nicobrest.kamehouse.*" />

  <context:property-placeholder
    location="classpath:jdbc.properties,
              classpath:hibernate.properties,
              classpath:application.properties" />

  <import resource="applicationContext-persistence.xml" />
  <import resource="spring-security.xml" />

  <context:annotation-config />
  <!-- Needed for loading spring configuration classes such as websocket ones -->

  <mvc:annotation-driven />

  <!-- commons beans -->
  <bean class="com.nicobrest.kamehouse.commons.config.WebSocketConfig" />
  <bean class="com.nicobrest.kamehouse.commons.config.MainSchedulerConfig" />

  <!-- Ehcache configuration -->
  <cache:annotation-driven />

  <bean id="cacheManager"
    class="org.springframework.cache.ehcache.EhCacheCacheManager">
    <property name="cacheManager" ref="ehcache" />
  </bean>

  <bean id="ehcache"
    class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="configLocation" value="classpath:ehcache.xml" />
    <property name="shared" value="true" />
  </bean>

  <!-- admin beans -->
  <bean class="com.nicobrest.kamehouse.admin.security.WebSocketSecurityConfig" />
  <bean class="com.nicobrest.kamehouse.admin.config.AdminSchedulerConfig" />

  <bean id="ehCacheService"
    class="com.nicobrest.kamehouse.admin.service.EhCacheService">
    <property name="cacheManager" ref="cacheManager" />
  </bean>

  <bean id="systemCommandService"
    class="com.nicobrest.kamehouse.admin.service.SystemCommandService" />

  <bean id="logLevelManagerService"
        class="com.nicobrest.kamehouse.admin.service.LogLevelManagerService" />

  <!-- vlc-rc beans -->
  <bean id="vlcRcService"
    class="com.nicobrest.kamehouse.vlcrc.service.VlcRcService">
    <property name="vlcPlayerService" ref="vlcPlayerService" />
  </bean>

  <bean id="vlcPlayerService"
    class="com.nicobrest.kamehouse.vlcrc.service.VlcPlayerService">
    <property name="vlcPlayerDao" ref="vlcPlayerDaoJpa" />
  </bean>

  <bean id="vlcPlayerDaoJpa"
    class="com.nicobrest.kamehouse.vlcrc.dao.VlcPlayerDaoJpa">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <!-- testmodule beans -->
  <bean
    class="org.springframework.web.context.support.ServletContextAttributeExporter">
    <!-- Enable access to specific beans from JSP pages using ${beanName} -->
    <property name="attributes">
      <map>
        <entry key="dragonBallUserService">
          <ref bean="dragonBallUserService" />
        </entry>
      </map>
    </property>
  </bean>
  <bean id="dragonBallUserService"
    class="com.nicobrest.kamehouse.testmodule.service.DragonBallUserService">
    <property name="dragonBallUserDao" ref="dragonBallUserDaoJpa" />
  </bean>

  <bean id="dragonBallUserDaoJpa"
    class="com.nicobrest.kamehouse.testmodule.dao.DragonBallUserDaoJpa">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <bean id="dragonBallUserDaoInMemory"
    class="com.nicobrest.kamehouse.testmodule.dao.DragonBallUserDaoInMemory">
    <property name="gohanDragonBallUser" ref="gohanDragonBallUser" />
    <property name="gotenDragonBallUser" ref="gotenDragonBallUser" />
  </bean>

  <bean id="gohanDragonBallUser"
    class="com.nicobrest.kamehouse.testmodule.model.DragonBallUser">
    <property name="id" value="1001" />
    <property name="username" value="gohanBean" />
    <property name="email" value="gohanBean@dbz.com" />
    <property name="age" value="20" />
    <property name="powerLevel" value="20" />
    <property name="stamina" value="1000" />
  </bean>

  <bean id="gotenDragonBallUser"
    class="com.nicobrest.kamehouse.testmodule.model.DragonBallUser">
    <property name="id" value="1002" />
    <property name="username" value="gotenBean" />
    <property name="email" value="gotenBean@dbz.com" />
    <property name="age" value="10" />
    <property name="powerLevel" value="10" />
    <property name="stamina" value="1000" />
  </bean>

  <bean id="testWebSocketService"
    class="com.nicobrest.kamehouse.testmodule.service.TestWebSocketService" />

  <!-- Resolve associations of views with .jsp files -->
  <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix">
      <value>/WEB-INF/jsp</value>
    </property>
    <property name="suffix">
      <value>.jsp</value>
    </property>
  </bean>

  <!-- Exception resolver settings -->
  <bean id="exceptionResolver"
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseBadRequestException">/error/400</prop>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseConflictException">/error/409</prop>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseForbiddenException">/error/403</prop>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseInvalidCommandException">/error/400</prop>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseNotFoundException">/error/404</prop>
        <prop key="com.nicobrest.kamehouse.commons.exception.KameHouseServerErrorException">/error/500</prop>
        <prop key="org.springframework.security.core.userdetails.UsernameNotFoundException">/error/404</prop>
      </props>
    </property>
    <property name="statusCodes">
      <props>
        <prop key="/error/400">400</prop>
        <prop key="/error/403">403</prop>
        <prop key="/error/404">404</prop>
        <prop key="/error/405">405</prop>
        <prop key="/error/409">409</prop>
        <prop key="/error/500">500</prop>
      </props>
    </property>
  </bean>

</beans>
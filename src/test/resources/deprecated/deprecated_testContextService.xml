<!-- DEPRECATED
    Replaced this testContextService.xml with mock objects defined in the test class 
    annotated with @Mock and annotated the properties that require those mocks with
    @InjectMocks and removed the need to load a spring application context for the test 
 --> 
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 
  <!-- Test Application Context to be used in unit tests for the Service layer -->
  
  <!-- Example endpoints beans -->
  <bean id="dragonBallUserService" name="dragonBallUserService" 
    class="com.nicobrest.baseapp.service.DragonBallUserService">
    <property name="dragonBallUserDao" ref="dragonBallUserDao" />
  </bean> 

  <bean id="dragonBallUserDao" name="dragonBallUserDao" class="org.mockito.Mockito"
    factory-method="mock">
    <constructor-arg value="com.nicobrest.baseapp.dao.DragonBallUserDao" />
  </bean>  
    
</beans>